#define ZMK_POINTING_DEFAULT_SCRL_VAL 50  // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&msc { acceleration-exponent = <1>; };

/ {
    behaviors {
        question_mark_exclamation: question_mark_exclamation {
            compatible = "zmk,behavior-tap-dance";
            label = "QUESTION_MARK_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp RS(MINUS)>, <&kp EXCLAMATION>;

            tapping-term-ms = <200>;
        };

        email_percent: email_percent {
            compatible = "zmk,behavior-tap-dance";
            label = "EMAIL_PERCENT";
            #binding-cells = <0>;
            bindings = <&kp RA(NUMBER_2)>, <&kp PERCENT>;

            tapping-term-ms = <200>;
        };

        hipsut: hipsut {
            compatible = "zmk,behavior-tap-dance";
            label = "HIPSUT";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH>, <&kp LS(N2)>;

            tapping-term-ms = <200>;
        };

        dollar_hashtag: dollar_hashtag {
            compatible = "zmk,behavior-tap-dance";
            label = "DOLLAR_HASHTAG";
            #binding-cells = <0>;
            bindings = <&kp RA(NUMBER_4)>, <&kp HASH>;

            tapping-term-ms = <200>;
        };

        mouse_scroll_horizontal: mouse_scroll_horizontal {
            compatible = "zmk,behavior-sensor-rotate";
            label = "MOUSE_SCROLL_HORIZONTAL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;
        };

        mouse_scroll_vertical: mouse_scroll_vertical {
            compatible = "zmk,behavior-sensor-rotate";
            label = "MOUSE_SCROLL_VERTICAL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 34 35 36 37 38 39>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        multiply_equal: multiply_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "MULTIPLY_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH>, <&kp LS(N0)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mkp MB1        &kp Q            &kp W            &kp E         &kp R                       &kp T                                                                             &kp Y      &kp U               &kp I         &kp O             &kp P                &multiply_equal
&kp ESCAPE      &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F           &kp G                                                                             &kp H      &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp SQT
&email_percent  &kp Z            &kp X            &kp C         &kp V                       &kp B                    &kp CAPSLOCK  &kp RA(N5)       &tog 1       &caps_word   &kp N      &kp M               &kp COMMA     &kp DOT           &kp FSLH             &hipsut
                                                  &none         &question_mark_exclamation  &mt LEFT_CONTROL DELETE  &lt 3 SPACE   &lt 2 BACKSPACE  &lt 2 ENTER  &lt 3 SPACE  &lt 5 TAB  &dollar_hashtag     &none
            >;

            sensor-bindings =
                <&mouse_scroll_horizontal>,
                <&mouse_scroll_vertical>;
        };

        mac_hotkey {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans       &kp GLOBE  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &lt 4 SPACE  &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };

        numbers_and_navigation {
            bindings = <
&none  &kp HOME       &kp PG_UP       &kp PG_DN  &kp END           &none                                                                             &kp KP_DIVIDE    &kp N7                     &kp N8         &kp N9             &kp DOT                  &none
&none  &kp LEFT       &kp UP          &kp DOWN   &kp RIGHT         &kp INSERT                                                                        &kp KP_MULTIPLY  &hmr RIGHT_SHIFT NUMBER_4  &hmr LCTRL N5  &hmr RIGHT_ALT N6  &hmr RIGHT_GUI KP_MINUS  &none
&none  &kp RIGHT_ALT  &kp LEFT_SHIFT  &kp DEL    &kp BACKSPACE     &none       &msc MOVE_Y(20)  &msc MOVE_Y(-20)  &msc MOVE_X(20)  &msc MOVE_X(-20)  &kp DELETE       &kp N1                     &kp NUMBER_2   &kp N3             &kp BACKSPACE            &none
                                      &none      &kp C_PLAY_PAUSE  &kp TAB     &kp SPACE        &kp ENTER         &kp ENTER        &kp KP_PLUS       &kp KP_NUMBER_0  &kp KP_DOT                 &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        special_characters {
            bindings = <
&none  &none  &mkp MB4  &none     &mkp MB5  &none                              &kp LS(RIGHT_BRACKET)  &kp RA(N8)        &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp RA(N9)                &none
&none  &none  &mkp MB1  &mkp MB3  &mkp MB2  &none                              &kp RA(RIGHT_BRACKET)  &kp RA(N7)        &kp LS(N8)            &kp LS(N9)                &kp RA(N0)                &none
&none  &none  &none     &none     &none     &none  &none  &none  &none  &none  &kp LS(N5)             &kp LS(NUMBER_6)  &kp LS(N7)            &kp RA(MINUS)             &kp RA(NON_US_BACKSLASH)  &none
                        &none     &none     &none  &none  &none  &none  &none  &none                  &none             &none
            >;
        };

        special_characters_MAC {
            bindings = <
&none  &none  &mkp MB4  &none     &mkp MB5  &none                              &kp LS(RIGHT_BRACKET)  &kp RA(RS(N8))    &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp RA(RS(N9))            &none
&none  &none  &mkp MB1  &mkp MB3  &mkp MB2  &none                              &kp RA(RIGHT_BRACKET)  &kp RA(N8)        &kp LS(N8)            &kp LS(N9)                &kp RA(N9)                &none
&none  &none  &none     &none     &none     &none  &none  &none  &none  &none  &kp LS(N5)             &kp LS(NUMBER_6)  &kp LS(N7)            &kp RA(MINUS)             &kp RA(NON_US_BACKSLASH)  &none
                        &none     &none     &none  &none  &none  &none  &none  &none                  &none             &none
            >;
        };

        fkeys_and_bluetooth {
            bindings = <
&none  &kp COMMA  &kp N7  &kp N8  &kp N9  &kp PLUS                                                           &kp PRINTSCREEN  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_CLR_ALL
&none  &kp RET    &kp N4  &kp N5  &kp N6  &kp N0                                                             &kp SCROLLLOCK   &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_CLR
&none  &kp BSPC   &kp N1  &kp N2  &kp N3  &kp SPACE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp PAUSE_BREAK  &kp F9  &kp F10  &kp F11  &kp F12  &out OUT_TOG
                          &none   &none   &none      &none         &none         &none         &none         &none            &none   &none
            >;
        };
    };
};
